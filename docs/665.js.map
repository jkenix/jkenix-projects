{"version":3,"file":"665.js","mappings":"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","sources":["webpack:///./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack:///./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack:///./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack:///./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack:///./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack:///./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/back.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack:///./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/array.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack:///./node_modules/framer-motion/dist/es/value/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack:///./node_modules/framer-motion/dist/es/debug/record.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/store.mjs","webpack:///./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.15.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.15.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","useContext","layoutId","useLayoutId","context","initial","undefined","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useHTMLProps","htmlProps","assign","useInitialMotionValues","transformValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","root","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","observeIntersection","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","interpolate","input","isClamp","mixer","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","arr","remaining","offsetProgress","fillOffset","defaultOffset","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","stiffness","damping","mass","isResolvedFromDuration","springOptions","derived","bounce","envelope","derivative","exponentialDecay","delta","exp","f","initialGuess","result","approximateRoot","findSpring","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","Element","memo","acceleratedValues","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueName","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","owner","HTMLElement","acceleratedAnimation","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createAcceleratedAnimation","isWillChangeMotionValue","add","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","makeTargetAnimatable","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","resolveCSSVariables","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}