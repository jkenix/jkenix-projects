{"version":3,"file":"351.js","mappings":"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","sources":["webpack:///./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack:///./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack:///./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack:///./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack:///./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack:///./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/back.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack:///./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/array.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack:///./node_modules/framer-motion/dist/es/value/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack:///./node_modules/framer-motion/dist/es/debug/record.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/store.mjs","webpack:///./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","useContext","layoutId","useLayoutId","context","initial","undefined","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","L","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","copyRawValuesOnly","target","source","useHTMLProps","htmlProps","assign","useInitialMotionValues","transformValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","root","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","observeIntersection","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","interpolate","input","isClamp","mixer","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","arr","remaining","offsetProgress","fillOffset","defaultOffset","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","stiffness","damping","mass","isResolvedFromDuration","springOptions","derived","bounce","envelope","derivative","exponentialDecay","delta","exp","f","initialGuess","result","approximateRoot","findSpring","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","now","isProcessing","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","Element","memo","acceleratedValues","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueName","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","owner","HTMLElement","acceleratedAnimation","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createAcceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","collectMotionValues","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","makeTargetAnimatable","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","remove","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","resolveCSSVariables","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}